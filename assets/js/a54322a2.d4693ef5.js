"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8919],{1014:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"typescript-api/natural-language-processing/TextEmbeddingsModule","title":"TextEmbeddingsModule","description":"TypeScript API implementation of the useTextEmbeddings hook.","source":"@site/docs/03-typescript-api/01-natural-language-processing/TextEmbeddingsModule.md","sourceDirName":"03-typescript-api/01-natural-language-processing","slug":"/typescript-api/natural-language-processing/TextEmbeddingsModule","permalink":"/react-native-executorch/docs/next/typescript-api/natural-language-processing/TextEmbeddingsModule","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-executorch/edit/main/docs/docs/03-typescript-api/01-natural-language-processing/TextEmbeddingsModule.md","tags":[],"version":"current","frontMatter":{"title":"TextEmbeddingsModule"},"sidebar":"tutorialSidebar","previous":{"title":"SpeechToTextModule","permalink":"/react-native-executorch/docs/next/typescript-api/natural-language-processing/SpeechToTextModule"},"next":{"title":"TokenizerModule","permalink":"/react-native-executorch/docs/next/typescript-api/natural-language-processing/TokenizerModule"}}');var r=t(4848),s=t(8453);const d={title:"TextEmbeddingsModule"},i=void 0,c={},l=[{value:"Reference",id:"reference",level:2},{value:"Methods",id:"methods",level:3},{value:"Loading the model",id:"loading-the-model",level:2},{value:"Running the model",id:"running-the-model",level:2}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["TypeScript API implementation of the ",(0,r.jsx)(n.a,{href:"/react-native-executorch/docs/next/hooks/natural-language-processing/useTextEmbeddings",children:"useTextEmbeddings"})," hook."]}),"\n",(0,r.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import {\n  TextEmbeddingsModule,\n  ALL_MINILM_L6_V2,\n} from 'react-native-executorch';\n\n// Creating an instance\nconst textEmbeddingsModule = new TextEmbeddingsModule();\n\n// Loading the model\nawait textEmbeddingsModule.load(ALL_MINILM_L6_V2);\n\n// Running the model\nconst embedding = await textEmbeddingsModule.forward('Hello World!');\n"})}),"\n",(0,r.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Method"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"load"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"(model: { modelSource: ResourceSource; tokenizerSource: ResourceSource }, onDownloadProgressCallback?: (progress: number) => void): Promise<void>"})}),(0,r.jsxs)(n.td,{children:["Loads the model, where ",(0,r.jsx)(n.code,{children:"modelSource"})," is a string that specifies the location of the model binary, ",(0,r.jsx)(n.code,{children:"tokenizerSource"})," is a string that specifies the location of the tokenizer JSON file."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"forward"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"(input: string): Promise<number[]>"})}),(0,r.jsxs)(n.td,{children:["Executes the model's forward pass, where ",(0,r.jsx)(n.code,{children:"input"})," is a text that will be embedded."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onDownloadProgress"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"(callback: (downloadProgress: number) => void): any"})}),(0,r.jsx)(n.td,{children:"Subscribe to the download progress event."})]})]})]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Type definitions"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"type ResourceSource = string | number | object;\n"})})]}),"\n",(0,r.jsx)(n.h2,{id:"loading-the-model",children:"Loading the model"}),"\n",(0,r.jsxs)(n.p,{children:["To load the model, use the ",(0,r.jsx)(n.code,{children:"load"})," method. It accepts an object:"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"model"})})," - Object containing the model source and tokenizer source."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"modelSource"})})," - A string that specifies the location of the model binary."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"tokenizerSource"})})," - A string that specifies the location of the tokenizer JSON file."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"onDownloadProgressCallback"})})," - (Optional) Function called on download progress."]}),"\n",(0,r.jsx)(n.p,{children:"This method returns a promise, which can resolve to an error or void."}),"\n",(0,r.jsxs)(n.p,{children:["For more information on loading resources, take a look at ",(0,r.jsx)(n.a,{href:"/react-native-executorch/docs/next/fundamentals/loading-models",children:"loading models"})," page."]}),"\n",(0,r.jsx)(n.h2,{id:"running-the-model",children:"Running the model"}),"\n",(0,r.jsxs)(n.p,{children:["To run the model, you can use the ",(0,r.jsx)(n.code,{children:"forward"})," method. It accepts one argument, which is the text you want to embed. The method returns a promise, which can resolve either to an error or an array of numbers representing the embedding."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>i});var o=t(6540);const r={},s=o.createContext(r);function d(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);