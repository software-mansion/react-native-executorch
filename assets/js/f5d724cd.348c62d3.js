"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1252],{3338:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":"unreleased","badge":true,"noIndex":false,"className":"docs-version-current","isLast":false,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Fundamentals","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Getting Started","href":"/react-native-executorch/docs/next/","docId":"fundamentals/getting-started","unlisted":false},{"type":"link","label":"Loading Models","href":"/react-native-executorch/docs/next/fundamentals/loading-models","docId":"fundamentals/loading-models","unlisted":false},{"type":"link","label":"Frequently Asked Questions","href":"/react-native-executorch/docs/next/fundamentals/frequently-asked-questions","docId":"fundamentals/frequently-asked-questions","unlisted":false}],"href":"/react-native-executorch/docs/next/category/fundamentals"},{"type":"category","label":"Hooks","collapsible":false,"collapsed":false,"items":[{"type":"category","label":"Natural Language Processing","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"useLLM","href":"/react-native-executorch/docs/next/hooks/natural-language-processing/useLLM","docId":"hooks/natural-language-processing/useLLM","unlisted":false},{"type":"link","label":"useSpeechToText","href":"/react-native-executorch/docs/next/hooks/natural-language-processing/useSpeechToText","docId":"hooks/natural-language-processing/useSpeechToText","unlisted":false},{"type":"link","label":"useTextEmbeddings","href":"/react-native-executorch/docs/next/hooks/natural-language-processing/useTextEmbeddings","docId":"hooks/natural-language-processing/useTextEmbeddings","unlisted":false},{"type":"link","label":"useTokenizer","href":"/react-native-executorch/docs/next/hooks/natural-language-processing/useTokenizer","docId":"hooks/natural-language-processing/useTokenizer","unlisted":false}],"href":"/react-native-executorch/docs/next/category/natural-language-processing"},{"type":"category","label":"Computer Vision","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"useClassification","href":"/react-native-executorch/docs/next/hooks/computer-vision/useClassification","docId":"hooks/computer-vision/useClassification","unlisted":false},{"type":"link","label":"useImageEmbeddings","href":"/react-native-executorch/docs/next/hooks/computer-vision/useImageEmbeddings","docId":"hooks/computer-vision/useImageEmbeddings","unlisted":false},{"type":"link","label":"useImageSegmentation","href":"/react-native-executorch/docs/next/hooks/computer-vision/useImageSegmentation","docId":"hooks/computer-vision/useImageSegmentation","unlisted":false},{"type":"link","label":"useOCR","href":"/react-native-executorch/docs/next/hooks/computer-vision/useOCR","docId":"hooks/computer-vision/useOCR","unlisted":false},{"type":"link","label":"useObjectDetection","href":"/react-native-executorch/docs/next/hooks/computer-vision/useObjectDetection","docId":"hooks/computer-vision/useObjectDetection","unlisted":false},{"type":"link","label":"useStyleTransfer","href":"/react-native-executorch/docs/next/hooks/computer-vision/useStyleTransfer","docId":"hooks/computer-vision/useStyleTransfer","unlisted":false},{"type":"link","label":"useTextToImage","href":"/react-native-executorch/docs/next/hooks/computer-vision/useTextToImage","docId":"hooks/computer-vision/useTextToImage","unlisted":false},{"type":"link","label":"useVerticalOCR","href":"/react-native-executorch/docs/next/hooks/computer-vision/useVerticalOCR","docId":"hooks/computer-vision/useVerticalOCR","unlisted":false}],"href":"/react-native-executorch/docs/next/category/computer-vision"},{"type":"category","label":"ExecuTorch Bindings","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"useExecutorchModule","href":"/react-native-executorch/docs/next/hooks/executorch-bindings/useExecutorchModule","docId":"hooks/executorch-bindings/useExecutorchModule","unlisted":false}],"href":"/react-native-executorch/docs/next/category/executorch-bindings"}],"href":"/react-native-executorch/docs/next/category/hooks"},{"type":"category","label":"TypeScript API","collapsible":false,"collapsed":false,"items":[{"type":"category","label":"Natural Language Processing","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"LLMModule","href":"/react-native-executorch/docs/next/typescript-api/natural-language-processing/LLMModule","docId":"typescript-api/natural-language-processing/LLMModule","unlisted":false},{"type":"link","label":"SpeechToTextModule","href":"/react-native-executorch/docs/next/typescript-api/natural-language-processing/SpeechToTextModule","docId":"typescript-api/natural-language-processing/SpeechToTextModule","unlisted":false},{"type":"link","label":"TextEmbeddingsModule","href":"/react-native-executorch/docs/next/typescript-api/natural-language-processing/TextEmbeddingsModule","docId":"typescript-api/natural-language-processing/TextEmbeddingsModule","unlisted":false},{"type":"link","label":"TokenizerModule","href":"/react-native-executorch/docs/next/typescript-api/natural-language-processing/TokenizerModule","docId":"typescript-api/natural-language-processing/TokenizerModule","unlisted":false}],"href":"/react-native-executorch/docs/next/category/natural-language-processing-1"},{"type":"category","label":"Computer Vision","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"ClassificationModule","href":"/react-native-executorch/docs/next/typescript-api/computer-vision/ClassificationModule","docId":"typescript-api/computer-vision/ClassificationModule","unlisted":false},{"type":"link","label":"ImageEmbeddingsModule","href":"/react-native-executorch/docs/next/typescript-api/computer-vision/ImageEmbeddingsModule","docId":"typescript-api/computer-vision/ImageEmbeddingsModule","unlisted":false},{"type":"link","label":"ImageSegmentationModule","href":"/react-native-executorch/docs/next/typescript-api/computer-vision/ImageSegmentationModule","docId":"typescript-api/computer-vision/ImageSegmentationModule","unlisted":false},{"type":"link","label":"OCRModule","href":"/react-native-executorch/docs/next/typescript-api/computer-vision/OCRModule","docId":"typescript-api/computer-vision/OCRModule","unlisted":false},{"type":"link","label":"ObjectDetectionModule","href":"/react-native-executorch/docs/next/typescript-api/computer-vision/ObjectDetectionModule","docId":"typescript-api/computer-vision/ObjectDetectionModule","unlisted":false},{"type":"link","label":"StyleTransferModule","href":"/react-native-executorch/docs/next/typescript-api/computer-vision/StyleTransferModule","docId":"typescript-api/computer-vision/StyleTransferModule","unlisted":false},{"type":"link","label":"TextToImageModule","href":"/react-native-executorch/docs/next/typescript-api/computer-vision/TextToImageModule","docId":"typescript-api/computer-vision/TextToImageModule","unlisted":false},{"type":"link","label":"VerticalOCRModule","href":"/react-native-executorch/docs/next/typescript-api/computer-vision/VerticalOCRModule","docId":"typescript-api/computer-vision/VerticalOCRModule","unlisted":false}],"href":"/react-native-executorch/docs/next/category/computer-vision-1"},{"type":"category","label":"ExecuTorch Bindings","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"ExecutorchModule","href":"/react-native-executorch/docs/next/typescript-api/executorch-bindings/ExecutorchModule","docId":"typescript-api/executorch-bindings/ExecutorchModule","unlisted":false}],"href":"/react-native-executorch/docs/next/category/executorch-bindings-1"}],"href":"/react-native-executorch/docs/next/category/typescript-api"},{"type":"category","label":"Benchmarks","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Inference Time","href":"/react-native-executorch/docs/next/benchmarks/inference-time","docId":"benchmarks/inference-time","unlisted":false},{"type":"link","label":"Memory Usage","href":"/react-native-executorch/docs/next/benchmarks/memory-usage","docId":"benchmarks/memory-usage","unlisted":false},{"type":"link","label":"Model Size","href":"/react-native-executorch/docs/next/benchmarks/model-size","docId":"benchmarks/model-size","unlisted":false}],"href":"/react-native-executorch/docs/next/category/benchmarks"},{"type":"category","label":"Utilities","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Resource Fetcher","href":"/react-native-executorch/docs/next/utilities/resource-fetcher","docId":"utilities/resource-fetcher","unlisted":false}],"href":"/react-native-executorch/docs/next/category/utilities"}]},"docs":{"benchmarks/inference-time":{"id":"benchmarks/inference-time","title":"Inference Time","description":"Times presented in the tables are measured as consecutive runs of the model. Initial run times may be up to 2x longer due to model loading and initialization.","sidebar":"tutorialSidebar"},"benchmarks/memory-usage":{"id":"benchmarks/memory-usage","title":"Memory Usage","description":"Classification","sidebar":"tutorialSidebar"},"benchmarks/model-size":{"id":"benchmarks/model-size","title":"Model Size","description":"Classification","sidebar":"tutorialSidebar"},"fundamentals/frequently-asked-questions":{"id":"fundamentals/frequently-asked-questions","title":"Frequently Asked Questions","description":"This section is meant to answer some common community inquiries, especially regarding the ExecuTorch runtime or adding your own models. If you can\'t see an answer to your question, feel free to open up a discussion.","sidebar":"tutorialSidebar"},"fundamentals/getting-started":{"id":"fundamentals/getting-started","title":"Getting Started","description":"Get started with React Native ExecuTorch - a framework for running AI models on-device in your React Native applications.","sidebar":"tutorialSidebar"},"fundamentals/loading-models":{"id":"fundamentals/loading-models","title":"Loading Models","description":"There are three different methods available for loading model files, depending on their size and location.","sidebar":"tutorialSidebar"},"hooks/computer-vision/useClassification":{"id":"hooks/computer-vision/useClassification","title":"useClassification","description":"Image classification is the process of assigning a label to an image that best describes its contents. For example, when given an image of a puppy, the image classifier should assign the puppy class to that image.","sidebar":"tutorialSidebar"},"hooks/computer-vision/useImageEmbeddings":{"id":"hooks/computer-vision/useImageEmbeddings","title":"useImageEmbeddings","description":"Learn how to use image embeddings models in your React Native applications with React Native ExecuTorch\'s useImageEmbeddings hook.","sidebar":"tutorialSidebar"},"hooks/computer-vision/useImageSegmentation":{"id":"hooks/computer-vision/useImageSegmentation","title":"useImageSegmentation","description":"Semantic image segmentation, akin to image classification, tries to assign the content of the image to one of the predefined classes. However, in case of segmentation this classification is done on a per-pixel basis, so as the result the model provides an image-sized array of scores for each of the classes. You can then use this information to detect objects on a per-pixel basis. React Native ExecuTorch offers a dedicated hook useImageSegmentation for this task.","sidebar":"tutorialSidebar"},"hooks/computer-vision/useObjectDetection":{"id":"hooks/computer-vision/useObjectDetection","title":"useObjectDetection","description":"Object detection is a computer vision technique that identifies and locates objects within images or video. It\u2019s commonly used in applications like image recognition, video surveillance or autonomous driving.","sidebar":"tutorialSidebar"},"hooks/computer-vision/useOCR":{"id":"hooks/computer-vision/useOCR","title":"useOCR","description":"Optical character recognition(OCR) is a computer vision technique that detects and recognizes text within the image. It\'s commonly used to convert different types of documents, such as scanned paper documents, PDF files, or images captured by a digital camera, into editable and searchable data.","sidebar":"tutorialSidebar"},"hooks/computer-vision/useStyleTransfer":{"id":"hooks/computer-vision/useStyleTransfer","title":"useStyleTransfer","description":"Style transfer is a technique used in computer graphics and machine learning where the visual style of one image is applied to the content of another. This is achieved using algorithms that manipulate data from both images, typically with the aid of a neural network. The result is a new image that combines the artistic elements of one picture with the structural details of another, effectively merging art with traditional imagery. React Native ExecuTorch offers a dedicated hook useStyleTransfer, for this task. However before you start you\'ll need to obtain ExecuTorch-compatible model binary.","sidebar":"tutorialSidebar"},"hooks/computer-vision/useTextToImage":{"id":"hooks/computer-vision/useTextToImage","title":"useTextToImage","description":"Learn how to use image generation models in your React Native applications with React Native ExecuTorch\'s useTextToImage hook.","sidebar":"tutorialSidebar"},"hooks/computer-vision/useVerticalOCR":{"id":"hooks/computer-vision/useVerticalOCR","title":"useVerticalOCR","description":"The useVerticalOCR hook is currently in an experimental phase. We appreciate feedback from users as we continue to refine and enhance its functionality.","sidebar":"tutorialSidebar"},"hooks/executorch-bindings/useExecutorchModule":{"id":"hooks/executorch-bindings/useExecutorchModule","title":"useExecutorchModule","description":"useExecutorchModule provides React Native bindings to the ExecuTorch Module API directly from JavaScript.","sidebar":"tutorialSidebar"},"hooks/natural-language-processing/useLLM":{"id":"hooks/natural-language-processing/useLLM","title":"useLLM","description":"Learn how to use LLMs in your React Native applications with React Native ExecuTorch\'s useLLM hook.","sidebar":"tutorialSidebar"},"hooks/natural-language-processing/useSpeechToText":{"id":"hooks/natural-language-processing/useSpeechToText","title":"useSpeechToText","description":"Learn how to use speech-to-text models in your React Native applications with React Native ExecuTorch\'s useSpeechToText hook.","sidebar":"tutorialSidebar"},"hooks/natural-language-processing/useTextEmbeddings":{"id":"hooks/natural-language-processing/useTextEmbeddings","title":"useTextEmbeddings","description":"Learn how to use text embeddings models in your React Native applications with React Native ExecuTorch\'s useTextEmbeddings hook.","sidebar":"tutorialSidebar"},"hooks/natural-language-processing/useTokenizer":{"id":"hooks/natural-language-processing/useTokenizer","title":"useTokenizer","description":"Learn how to tokenize your text in your React Native applications using React Native ExecuTorch\'s useTokenizer hook.","sidebar":"tutorialSidebar"},"typescript-api/computer-vision/ClassificationModule":{"id":"typescript-api/computer-vision/ClassificationModule","title":"ClassificationModule","description":"TypeScript API implementation of the useClassification hook.","sidebar":"tutorialSidebar"},"typescript-api/computer-vision/ImageEmbeddingsModule":{"id":"typescript-api/computer-vision/ImageEmbeddingsModule","title":"ImageEmbeddingsModule","description":"TypeScript API implementation of the useImageEmbeddings hook.","sidebar":"tutorialSidebar"},"typescript-api/computer-vision/ImageSegmentationModule":{"id":"typescript-api/computer-vision/ImageSegmentationModule","title":"ImageSegmentationModule","description":"TypeScript API implementation of the useImageSegmentation hook.","sidebar":"tutorialSidebar"},"typescript-api/computer-vision/ObjectDetectionModule":{"id":"typescript-api/computer-vision/ObjectDetectionModule","title":"ObjectDetectionModule","description":"TypeScript API implementation of the useObjectDetection hook.","sidebar":"tutorialSidebar"},"typescript-api/computer-vision/OCRModule":{"id":"typescript-api/computer-vision/OCRModule","title":"OCRModule","description":"TypeScript API implementation of the useOCR hook.","sidebar":"tutorialSidebar"},"typescript-api/computer-vision/StyleTransferModule":{"id":"typescript-api/computer-vision/StyleTransferModule","title":"StyleTransferModule","description":"TypeScript API implementation of the useStyleTransfer hook.","sidebar":"tutorialSidebar"},"typescript-api/computer-vision/TextToImageModule":{"id":"typescript-api/computer-vision/TextToImageModule","title":"TextToImageModule","description":"TypeScript API implementation of the useTextToImage hook.","sidebar":"tutorialSidebar"},"typescript-api/computer-vision/VerticalOCRModule":{"id":"typescript-api/computer-vision/VerticalOCRModule","title":"VerticalOCRModule","description":"TypeScript API implementation of the useVerticalOCR hook.","sidebar":"tutorialSidebar"},"typescript-api/executorch-bindings/ExecutorchModule":{"id":"typescript-api/executorch-bindings/ExecutorchModule","title":"ExecutorchModule","description":"ExecutorchModule provides TypeScript bindings for the underlying ExecuTorch Module API.","sidebar":"tutorialSidebar"},"typescript-api/natural-language-processing/LLMModule":{"id":"typescript-api/natural-language-processing/LLMModule","title":"LLMModule","description":"TypeScript API implementation of the useLLM hook.","sidebar":"tutorialSidebar"},"typescript-api/natural-language-processing/SpeechToTextModule":{"id":"typescript-api/natural-language-processing/SpeechToTextModule","title":"SpeechToTextModule","description":"TypeScript API implementation of the useSpeechToText hook.","sidebar":"tutorialSidebar"},"typescript-api/natural-language-processing/TextEmbeddingsModule":{"id":"typescript-api/natural-language-processing/TextEmbeddingsModule","title":"TextEmbeddingsModule","description":"TypeScript API implementation of the useTextEmbeddings hook.","sidebar":"tutorialSidebar"},"typescript-api/natural-language-processing/TokenizerModule":{"id":"typescript-api/natural-language-processing/TokenizerModule","title":"TokenizerModule","description":"TypeScript API implementation of the useTokenizer hook.","sidebar":"tutorialSidebar"},"utilities/resource-fetcher":{"id":"utilities/resource-fetcher","title":"Resource Fetcher","description":"This module provides functions to download and work with downloaded files stored in the application\'s document directory inside the react-native-executorch/ directory. These utilities can help you manage your storage and clean up the downloaded files when they are no longer needed.","sidebar":"tutorialSidebar"}}}}')}}]);