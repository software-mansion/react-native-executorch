"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[789],{5680:(e,t,a)=>{a.d(t,{xA:()=>m,yg:()=>g});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),s=c(a),d=r,g=s["".concat(p,".").concat(d)]||s[d]||u[d]||o;return a?n.createElement(g,l(l({ref:t},m),{},{components:a})):n.createElement(g,l({ref:t},m))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[s]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},9068:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=a(8168),r=(a(6540),a(5680));const o={title:"Exporting Llama",sidebar_position:2},l=void 0,i={unversionedId:"guides/exporting-llama",id:"guides/exporting-llama",title:"Exporting Llama",description:"In order to make the process of export as simple as possible for you, we created a script that runs a Docker container and exports the model.",source:"@site/docs/guides/exporting-llama.mdx",sourceDirName:"guides",slug:"/guides/exporting-llama",permalink:"/react-native-executorch/docs/guides/exporting-llama",draft:!1,editUrl:"https://github.com/software-mansion/react-native-executorch/edit/main/docs/docs/guides/exporting-llama.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Exporting Llama",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Running LLMs",permalink:"/react-native-executorch/docs/guides/running-llms"}},p={},c=[{value:"Steps to export Llama",id:"steps-to-export-llama",level:2},{value:"1. Create an Account:",id:"1-create-an-account",level:3},{value:"2. Select a Model:",id:"2-select-a-model",level:3},{value:"3. Download Files:",id:"3-download-files",level:3},{value:"4. Rename the Tokenizer File:",id:"4-rename-the-tokenizer-file",level:3},{value:"5. Run the Export Script:",id:"5-run-the-export-script",level:3}],m={toc:c},s="wrapper";function u(e){let{components:t,...a}=e;return(0,r.yg)(s,(0,n.A)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"In order to make the process of export as simple as possible for you, we created a script that runs a Docker container and exports the model. "),(0,r.yg)("h2",{id:"steps-to-export-llama"},"Steps to export Llama"),(0,r.yg)("h3",{id:"1-create-an-account"},"1. Create an Account:"),(0,r.yg)("p",null,"Get a ",(0,r.yg)("a",{parentName:"p",href:"https://huggingface.co/"},"HuggingFace")," account. This will allow you to download needed files. You can also use the ",(0,r.yg)("a",{parentName:"p",href:"https://www.llama.com/llama-downloads/"},"official Llama website"),". "),(0,r.yg)("h3",{id:"2-select-a-model"},"2. Select a Model:"),(0,r.yg)("p",null,"Pick the model that suits your needs. Before you download it, you'll need to accept a license. For best performance, we recommend using Spin-Quant or QLoRA versions of the model:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://huggingface.co/meta-llama/Llama-3.2-3B-Instruct/tree/main/original"},"Llama 3.2 3B")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://huggingface.co/meta-llama/Llama-3.2-1B-Instruct/tree/main/original"},"Llama 3.2 1B")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://huggingface.co/meta-llama/Llama-3.2-3B-Instruct-SpinQuant_INT4_EO8/tree/main"},"Llama 3.2 3B Spin-Quant")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://huggingface.co/meta-llama/Llama-3.2-1B-Instruct-SpinQuant_INT4_EO8/tree/main"},"Llama 3.2 1B Spin-Quant")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://huggingface.co/meta-llama/Llama-3.2-3B-Instruct-QLORA_INT4_EO8/tree/main"},"Llama 3.2 3B QLoRA")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://huggingface.co/meta-llama/Llama-3.2-1B-Instruct-QLORA_INT4_EO8/tree/main"},"Llama 3.2 1B QLoRA"))),(0,r.yg)("h3",{id:"3-download-files"},"3. Download Files:"),(0,r.yg)("p",null,"Download the ",(0,r.yg)("inlineCode",{parentName:"p"},"consolidated.00.pth"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"params.json")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"tokenizer.model")," files. If you can't see them, make sure to check the ",(0,r.yg)("inlineCode",{parentName:"p"},"original")," directory."),(0,r.yg)("h3",{id:"4-rename-the-tokenizer-file"},"4. Rename the Tokenizer File:"),(0,r.yg)("p",null,"Rename the ",(0,r.yg)("inlineCode",{parentName:"p"},"tokenizer.model")," file to ",(0,r.yg)("inlineCode",{parentName:"p"},"tokenizer.bin")," as required by the library:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"mv tokenizer.model tokenizer.bin\n")),(0,r.yg)("h3",{id:"5-run-the-export-script"},"5. Run the Export Script:"),(0,r.yg)("p",null,"Navigate to the ",(0,r.yg)("inlineCode",{parentName:"p"},"llama_export")," directory and run the following command: "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./build_llama_binary.sh --model-path /path/to/consolidated.00.pth --params-path /path/to/params.json\n")),(0,r.yg)("p",null,"The script will pull a Docker image from docker hub, and then run it to export the model. By default the output (llama3_2.pte file) will be saved in the ",(0,r.yg)("inlineCode",{parentName:"p"},"llama-export/outputs")," directory. However, you can override that behavior with the ",(0,r.yg)("inlineCode",{parentName:"p"},"--output-path [path]")," flag."),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("mdxAdmonitionTitle",{parentName:"admonition"},"[Note]"),(0,r.yg)("p",{parentName:"admonition"},"This Docker image was tested on MacOS with ARM chip. This might not work in other environments.")))}u.isMDXComponent=!0}}]);