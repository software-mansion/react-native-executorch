"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7023],{2913:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"typescript-api/ClassificationModule","title":"ClassificationModule","description":"TypeScript API implementation of the useClassification hook.","source":"@site/docs/typescript-api/ClassificationModule.md","sourceDirName":"typescript-api","slug":"/typescript-api/ClassificationModule","permalink":"/react-native-executorch/docs/next/typescript-api/ClassificationModule","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-executorch/edit/main/docs/docs/typescript-api/ClassificationModule.md","tags":[],"version":"current","frontMatter":{"title":"ClassificationModule"},"sidebar":"tutorialSidebar","previous":{"title":"ImageSegmentationModule","permalink":"/react-native-executorch/docs/next/typescript-api/ImageSegmentationModule"},"next":{"title":"ObjectDetectionModule","permalink":"/react-native-executorch/docs/next/typescript-api/ObjectDetectionModule"}}');var n=i(4848),r=i(8453);const s={title:"ClassificationModule"},c=void 0,d={},a=[{value:"Reference",id:"reference",level:2},{value:"Methods",id:"methods",level:3},{value:"Loading the model",id:"loading-the-model",level:2},{value:"Running the model",id:"running-the-model",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components},{Details:i}=t;return i||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["TypeScript API implementation of the ",(0,n.jsx)(t.a,{href:"/react-native-executorch/docs/next/computer-vision/useClassification",children:"useClassification"})," hook."]}),"\n",(0,n.jsx)(t.h2,{id:"reference",children:"Reference"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",children:"import {\n  ClassificationModule,\n  EFFICIENTNET_V2_S,\n} from 'react-native-executorch';\n\nconst imageUri = 'path/to/image.png';\n\n// Loading the model\nawait ClassificationModule.load(EFFICIENTNET_V2_S);\n\n// Running the model\nconst classesWithProbabilities = await ClassificationModule.forward(imageUri);\n"})}),"\n",(0,n.jsx)(t.h3,{id:"methods",children:"Methods"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Method"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"load"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"(modelSource: ResourceSource): Promise<void>"})}),(0,n.jsxs)(t.td,{children:["Loads the model, where ",(0,n.jsx)(t.code,{children:"modelSource"})," is a string that specifies the location of the model binary."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"forward"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"(input: string): Promise<{ [category: string]: number }>"})}),(0,n.jsxs)(t.td,{children:["Executes the model's forward pass, where ",(0,n.jsx)(t.code,{children:"input"})," can be a fetchable resource or a Base64-encoded string."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"onDownloadProgress"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"(callback: (downloadProgress: number) => void): any"})}),(0,n.jsx)(t.td,{children:"Subscribe to the download progress event."})]})]})]}),"\n",(0,n.jsxs)(i,{children:[(0,n.jsx)("summary",{children:"Type definitions"}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",children:"type ResourceSource = string | number | object;\n"})})]}),"\n",(0,n.jsx)(t.h2,{id:"loading-the-model",children:"Loading the model"}),"\n",(0,n.jsxs)(t.p,{children:["To load the model, use the ",(0,n.jsx)(t.code,{children:"load"})," method. It accepts the ",(0,n.jsx)(t.code,{children:"modelSource"})," which is a string that specifies the location of the model binary. For more information, take a look at ",(0,n.jsx)(t.a,{href:"/react-native-executorch/docs/next/fundamentals/loading-models",children:"loading models"})," page. This method returns a promise, which can resolve to an error or void."]}),"\n",(0,n.jsx)(t.h2,{id:"running-the-model",children:"Running the model"}),"\n",(0,n.jsxs)(t.p,{children:["To run the model, you can use the ",(0,n.jsx)(t.code,{children:"forward"})," method. It accepts one argument, which is the image. The image can be a remote URL, a local file URI, or a base64-encoded image. The method returns a promise, which can resolve either to an error or an object containing categories with their probabilities."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>c});var o=i(6540);const n={},r=o.createContext(n);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);