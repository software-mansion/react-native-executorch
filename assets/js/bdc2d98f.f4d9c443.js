"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8065],{8453:(e,o,s)=>{s.d(o,{R:()=>d,x:()=>l});var n=s(6540);const t={},i=n.createContext(t);function d(e){const o=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),n.createElement(i.Provider,{value:o},e.children)}},8611:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>d,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"utils/list-downloaded-resources","title":"List Downloaded Resources","description":"This module provides functions to retrieve a list of downloaded files stored in the application\'s document directory inside the react-native-executorch/ directory. These utilities can help you manage your storage and clean up the downloaded files when they are no longer needed.","source":"@site/versioned_docs/version-0.3.x/utils/list-downloaded-resources.md","sourceDirName":"utils","slug":"/utils/list-downloaded-resources","permalink":"/react-native-executorch/docs/0.3.x/utils/list-downloaded-resources","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-executorch/edit/main/docs/versioned_docs/version-0.3.x/utils/list-downloaded-resources.md","tags":[],"version":"0.3.x","sidebarPosition":1,"frontMatter":{"title":"List Downloaded Resources","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Utils","permalink":"/react-native-executorch/docs/0.3.x/category/utils"},"next":{"title":"Benchmarks","permalink":"/react-native-executorch/docs/0.3.x/category/benchmarks"}}');var t=s(4848),i=s(8453);const d={title:"List Downloaded Resources",sidebar_position:1},l=void 0,r={},a=[{value:"listDownloadedFiles",id:"listdownloadedfiles",level:2},{value:"Reference",id:"reference",level:3},{value:"Returns",id:"returns",level:3},{value:"listDownloadedModels",id:"listdownloadedmodels",level:2},{value:"Reference",id:"reference-1",level:3},{value:"Returns",id:"returns-1",level:3}];function c(e){const o={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.p,{children:["This module provides functions to retrieve a list of downloaded files stored in the application's document directory inside the ",(0,t.jsx)(o.code,{children:"react-native-executorch/"})," directory. These utilities can help you manage your storage and clean up the downloaded files when they are no longer needed."]}),"\n",(0,t.jsx)(o.h2,{id:"listdownloadedfiles",children:"listDownloadedFiles"}),"\n",(0,t.jsx)(o.p,{children:"Lists all the downloaded files used by React Native ExecuTorch."}),"\n",(0,t.jsx)(o.h3,{id:"reference",children:"Reference"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-typescript",children:"import { listDownloadedFiles } from 'react-native-executorch';\n\nconst filesUris = await listDownloadedFiles();\n"})}),"\n",(0,t.jsx)(o.h3,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"Promise<string[]>"})," - A promise, which resolves to an array of URIs for all the downloaded files."]}),"\n",(0,t.jsx)(o.admonition,{type:"info",children:(0,t.jsxs)(o.p,{children:["Since this function returns all the downloaded files, it also includes all the downloaded models.\nIf you want to list only the downloaded models, use the ",(0,t.jsx)(o.a,{href:"/react-native-executorch/docs/0.3.x/utils/list-downloaded-resources#listdownloadedmodels",children:"listDownloadedModels"})," function."]})}),"\n",(0,t.jsx)(o.h2,{id:"listdownloadedmodels",children:"listDownloadedModels"}),"\n",(0,t.jsx)(o.p,{children:"Lists all the downloaded models used by React Native ExecuTorch."}),"\n",(0,t.jsx)(o.h3,{id:"reference-1",children:"Reference"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-typescript",children:"import { listDownloadedModels } from 'react-native-executorch';\n\nconst modelsUris = await listDownloadedModels();\n"})}),"\n",(0,t.jsx)(o.h3,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"Promise<string[]>"})," - A promise, which resolves to an array of URIs for all the downloaded models."]})]})}function u(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);