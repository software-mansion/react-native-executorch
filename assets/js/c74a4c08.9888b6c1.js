"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[615],{8453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>s});var n=o(6540);const r={},c=n.createContext(r);function i(e){const t=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(c.Provider,{value:t},e.children)}},8784:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"hookless-api/ObjectDetectionModule","title":"ObjectDetectionModule","description":"Hookless implementation of the useObjectDetection hook.","source":"@site/docs/hookless-api/ObjectDetectionModule.md","sourceDirName":"hookless-api","slug":"/hookless-api/ObjectDetectionModule","permalink":"/react-native-executorch/docs/hookless-api/ObjectDetectionModule","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-executorch/edit/main/docs/docs/hookless-api/ObjectDetectionModule.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"ObjectDetectionModule","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"StyleTransferModule","permalink":"/react-native-executorch/docs/hookless-api/StyleTransferModule"},"next":{"title":"OCRModule","permalink":"/react-native-executorch/docs/hookless-api/OCRModule"}}');var r=o(4848),c=o(8453);const i={title:"ObjectDetectionModule",sidebar_position:5},s=void 0,d={},l=[{value:"Reference",id:"reference",level:2},{value:"Methods",id:"methods",level:3},{value:"Loading the model",id:"loading-the-model",level:2},{value:"Running the model",id:"running-the-model",level:2}];function a(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components},{Details:o}=t;return o||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Hookless implementation of the ",(0,r.jsx)(t.a,{href:"/react-native-executorch/docs/computer-vision/useObjectDetection",children:"useObjectDetection"})," hook."]}),"\n",(0,r.jsx)(t.h2,{id:"reference",children:"Reference"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import {\n  ObjectDetectionModule,\n  SSDLITE_320_MOBILENET_V3_LARGE,\n} from 'react-native-executorch';\n\nconst imageUri = 'path/to/image.png';\n\n// Loading the model\nawait ObjectDetectionModule.load(SSDLITE_320_MOBILENET_V3_LARGE);\n\n// Running the model\nconst detections = await ObjectDetectionModule.forward(imageUri);\n"})}),"\n",(0,r.jsx)(t.h3,{id:"methods",children:"Methods"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Method"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"load"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"(modelSource: ResourceSource): Promise<void>"})}),(0,r.jsxs)(t.td,{children:["Loads the model, where ",(0,r.jsx)(t.code,{children:"modelSource"})," is a string that specifies the location of the model binary."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"forward"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"(input: string): Promise<Detection[]>"})}),(0,r.jsxs)(t.td,{children:["Executes the model's forward pass, where ",(0,r.jsx)(t.code,{children:"input"})," can be a fetchable resource or a Base64-encoded string."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"onDownloadProgress"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"(callback: (downloadProgress: number) => void): any"})}),(0,r.jsx)(t.td,{children:"Subscribe to the download progress event."})]})]})]}),"\n",(0,r.jsxs)(o,{children:[(0,r.jsx)("summary",{children:"Type definitions"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"type ResourceSource = string | number;\n\ninterface Bbox {\n  x1: number;\n  x2: number;\n  y1: number;\n  y2: number;\n}\n\ninterface Detection {\n  bbox: Bbox;\n  label: keyof typeof CocoLabel;\n  score: number;\n}\n"})})]}),"\n",(0,r.jsx)(t.h2,{id:"loading-the-model",children:"Loading the model"}),"\n",(0,r.jsxs)(t.p,{children:["To load the model, use the ",(0,r.jsx)(t.code,{children:"load"})," method. It accepts the ",(0,r.jsx)(t.code,{children:"modelSource"})," which is a string that specifies the location of the model binary. For more information, take a look at ",(0,r.jsx)(t.a,{href:"/react-native-executorch/docs/fundamentals/loading-models",children:"loading models"})," page. This method returns a promise, which can resolve to an error or void."]}),"\n",(0,r.jsx)(t.h2,{id:"running-the-model",children:"Running the model"}),"\n",(0,r.jsxs)(t.p,{children:["To run the model, you can use the ",(0,r.jsx)(t.code,{children:"forward"})," method. It accepts one argument, which is the image. The image can be a remote URL, a local file URI, or a base64-encoded image. The method returns a promise, which can resolve either to an error or an array of ",(0,r.jsx)(t.code,{children:"Detection"})," objects. Each object contains coordinates of the bounding box, the label of the detected object, and the confidence score."]})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);