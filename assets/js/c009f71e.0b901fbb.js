"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4560],{752:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"0.2.x","label":"0.2.x","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-0.2.x","isLast":false,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Fundamentals","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Getting Started","href":"/react-native-executorch/docs/0.2.x/","docId":"fundamentals/getting-started","unlisted":false},{"type":"link","label":"Loading models","href":"/react-native-executorch/docs/0.2.x/fundamentals/loading-models","docId":"fundamentals/loading-models","unlisted":false}],"href":"/react-native-executorch/docs/0.2.x/category/fundamentals"},{"type":"category","label":"LLMs","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Running LLMs","href":"/react-native-executorch/docs/0.2.x/llms/running-llms","docId":"llms/running-llms","unlisted":false},{"type":"link","label":"Exporting Llama","href":"/react-native-executorch/docs/0.2.x/llms/exporting-llama","docId":"llms/exporting-llama","unlisted":false}],"href":"/react-native-executorch/docs/0.2.x/category/llms"},{"type":"category","label":"Computer Vision","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"useClassification","href":"/react-native-executorch/docs/0.2.x/computer-vision/useClassification","docId":"computer-vision/useClassification","unlisted":false},{"type":"link","label":"useObjectDetection","href":"/react-native-executorch/docs/0.2.x/computer-vision/useObjectDetection","docId":"computer-vision/useObjectDetection","unlisted":false},{"type":"link","label":"useStyleTransfer","href":"/react-native-executorch/docs/0.2.x/computer-vision/useStyleTransfer","docId":"computer-vision/useStyleTransfer","unlisted":false}],"href":"/react-native-executorch/docs/0.2.x/category/computer-vision"},{"type":"category","label":"Module API","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"ExecuTorch Bindings","href":"/react-native-executorch/docs/0.2.x/module-api/executorch-bindings","docId":"module-api/executorch-bindings","unlisted":false}],"href":"/react-native-executorch/docs/0.2.x/category/module-api"}]},"docs":{"computer-vision/useClassification":{"id":"computer-vision/useClassification","title":"useClassification","description":"Image classification is the process of assigning a label to an image that best describes its contents. For example, when given an image of a puppy, the image classifier should assign the puppy class to that image.","sidebar":"tutorialSidebar"},"computer-vision/useObjectDetection":{"id":"computer-vision/useObjectDetection","title":"useObjectDetection","description":"Object detection is a computer vision technique that identifies and locates objects within images or video. It\u2019s commonly used in applications like image recognition, video surveillance or autonomous driving.","sidebar":"tutorialSidebar"},"computer-vision/useStyleTransfer":{"id":"computer-vision/useStyleTransfer","title":"useStyleTransfer","description":"Style transfer is a technique used in computer graphics and machine learning where the visual style of one image is applied to the content of another. This is achieved using algorithms that manipulate data from both images, typically with the aid of a neural network. The result is a new image that combines the artistic elements of one picture with the structural details of another, effectively merging art with traditional imagery. React Native ExecuTorch offers a dedicated hook useStyleTransfer, for this task. However before you start you\'ll need to obtain ExecuTorch-compatible model binary.","sidebar":"tutorialSidebar"},"fundamentals/getting-started":{"id":"fundamentals/getting-started","title":"Getting Started","description":"What is ExecuTorch?","sidebar":"tutorialSidebar"},"fundamentals/loading-models":{"id":"fundamentals/loading-models","title":"Loading models","description":"There are three different methods available for loading model files, depending on their size and location.","sidebar":"tutorialSidebar"},"llms/exporting-llama":{"id":"llms/exporting-llama","title":"Exporting Llama","description":"In order to make the process of export as simple as possible for you, we created a script that runs a Docker container and exports the model.","sidebar":"tutorialSidebar"},"llms/running-llms":{"id":"llms/running-llms","title":"Running LLMs","description":"React Native ExecuTorch supports Llama 3.2 models, including quantized versions. Before getting started, you\u2019ll need to obtain the .pte binary\u2014a serialized model\u2014and the tokenizer. There are various ways to accomplish this:","sidebar":"tutorialSidebar"},"module-api/executorch-bindings":{"id":"module-api/executorch-bindings","title":"ExecuTorch Bindings","description":"ExecuTorch bindings provide streamlined interface to access the Module API directly from Javascript.","sidebar":"tutorialSidebar"}}}}')}}]);