"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1834],{4772:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"typescript-api/OCRModule","title":"OCRModule","description":"TypeScript API implementation of the useOCR hook.","source":"@site/docs/typescript-api/OCRModule.md","sourceDirName":"typescript-api","slug":"/typescript-api/OCRModule","permalink":"/react-native-executorch/docs/next/typescript-api/OCRModule","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-executorch/edit/main/docs/docs/typescript-api/OCRModule.md","tags":[],"version":"current","frontMatter":{"title":"OCRModule"},"sidebar":"tutorialSidebar","previous":{"title":"Computer Vision","permalink":"/react-native-executorch/docs/next/category/computer-vision-1"},"next":{"title":"VerticalOCRModule","permalink":"/react-native-executorch/docs/next/typescript-api/VerticalOCRModule"}}');var o=t(4848),i=t(8453);const s={title:"OCRModule"},c=void 0,d={},a=[{value:"Reference",id:"reference",level:2},{value:"Methods",id:"methods",level:3},{value:"Loading the model",id:"loading-the-model",level:2},{value:"Listening for download progress",id:"listening-for-download-progress",level:2},{value:"Running the model",id:"running-the-model",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["TypeScript API implementation of the ",(0,o.jsx)(n.a,{href:"/react-native-executorch/docs/next/computer-vision/useOCR",children:"useOCR"})," hook."]}),"\n",(0,o.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import {\n  OCRModule,\n  DETECTOR_CRAFT_800,\n  RECOGNIZER_EN_CRNN_512,\n  RECOGNIZER_EN_CRNN_256,\n  RECOGNIZER_EN_CRNN_128,\n} from 'react-native-executorch';\nconst imageUri = 'path/to/image.png';\n\n// Loading the model\nawait OCRModule.load({\n  detectorSource: DETECTOR_CRAFT_800,\n  recognizerSources: {\n    recognizerLarge: RECOGNIZER_EN_CRNN_512,\n    recognizerMedium: RECOGNIZER_EN_CRNN_256,\n    recognizerSmall: RECOGNIZER_EN_CRNN_128,\n  },\n  language: 'en',\n});\n\n// Running the model\nconst ocrDetections = await OCRModule.forward(imageUri);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Method"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"load"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"(detectorSource: string, recognizerSources: RecognizerSources, language: OCRLanguage): Promise<void>"})}),(0,o.jsxs)(n.td,{children:["Loads the detector and recognizers, which sources are represented by ",(0,o.jsx)(n.code,{children:"RecognizerSources"}),"."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"forward"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"(input: string): Promise<OCRDetections[]>"})}),(0,o.jsxs)(n.td,{children:["Executes the model's forward pass, where ",(0,o.jsx)(n.code,{children:"input"})," can be a fetchable resource or a Base64-encoded string."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"onDownloadProgress"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"(callback: (downloadProgress: number) => void): any"})}),(0,o.jsx)(n.td,{children:"Subscribe to the download progress event."})]})]})]}),"\n",(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:"Type definitions"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"interface RecognizerSources {\n  recognizerLarge: string | number;\n  recognizerMedium: string | number;\n  recognizerSmall: string | number;\n}\n\ntype OCRLanguage =\n  | 'abq'\n  | 'ady'\n  | 'af'\n  | 'ava'\n  | 'az'\n  | 'be'\n  | 'bg'\n  | 'bs'\n  | 'chSim'\n  | 'che'\n  | 'cs'\n  | 'cy'\n  | 'da'\n  | 'dar'\n  | 'de'\n  | 'en'\n  | 'es'\n  | 'et'\n  | 'fr'\n  | 'ga'\n  | 'hr'\n  | 'hu'\n  | 'id'\n  | 'inh'\n  | 'ic'\n  | 'it'\n  | 'ja'\n  | 'kbd'\n  | 'kn'\n  | 'ko'\n  | 'ku'\n  | 'la'\n  | 'lbe'\n  | 'lez'\n  | 'lt'\n  | 'lv'\n  | 'mi'\n  | 'mn'\n  | 'ms'\n  | 'mt'\n  | 'nl'\n  | 'no'\n  | 'oc'\n  | 'pi'\n  | 'pl'\n  | 'pt'\n  | 'ro'\n  | 'ru'\n  | 'rsCyrillic'\n  | 'rsLatin'\n  | 'sk'\n  | 'sl'\n  | 'sq'\n  | 'sv'\n  | 'sw'\n  | 'tab'\n  | 'te'\n  | 'th'\n  | 'tjk'\n  | 'tl'\n  | 'tr'\n  | 'uk'\n  | 'uz'\n  | 'vi';\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\ninterface OCRDetection {\n  bbox: Point[];\n  text: string;\n  score: number;\n}\n"})})]}),"\n",(0,o.jsx)(n.h2,{id:"loading-the-model",children:"Loading the model"}),"\n",(0,o.jsxs)(n.p,{children:["To load the model, use the ",(0,o.jsx)(n.code,{children:"load"})," method. It accepts:"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"detectorSource"})})," - A string that specifies the location of the detector binary. For more information, take a look at ",(0,o.jsx)(n.a,{href:"/react-native-executorch/docs/next/fundamentals/loading-models",children:"loading models"})," section."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"recognizerSources"})})," - An object that specifies locations of the recognizers binary files. Each recognizer is composed of three models tailored to process images of varying widths."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"recognizerLarge"})," - A string that specifies the location of the recognizer binary file which accepts input images with a width of 512 pixels."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"recognizerMedium"})," - A string that specifies the location of the recognizer binary file which accepts input images with a width of 256 pixels."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"recognizerSmall"})," - A string that specifies the location of the recognizer binary file which accepts input images with a width of 128 pixels."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["For more information, take a look at ",(0,o.jsx)(n.a,{href:"/react-native-executorch/docs/next/fundamentals/loading-models",children:"loading models"})," section."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"language"})})," - A parameter that specifies the language of the text to be recognized by the OCR."]}),"\n",(0,o.jsx)(n.p,{children:"This method returns a promise, which can resolve to an error or void."}),"\n",(0,o.jsx)(n.h2,{id:"listening-for-download-progress",children:"Listening for download progress"}),"\n",(0,o.jsxs)(n.p,{children:["To subscribe to the download progress event, you can use the ",(0,o.jsx)(n.code,{children:"onDownloadProgress"})," method. It accepts a callback function that will be called whenever the download progress changes."]}),"\n",(0,o.jsx)(n.h2,{id:"running-the-model",children:"Running the model"}),"\n",(0,o.jsxs)(n.p,{children:["To run the model, you can use the ",(0,o.jsx)(n.code,{children:"forward"})," method. It accepts one argument, which is the image. The image can be a remote URL, a local file URI, or a base64-encoded image. The method returns a promise, which can resolve either to an error or an array of ",(0,o.jsx)(n.code,{children:"OCRDetection"})," objects. Each object contains coordinates of the bounding box, the label of the detected object, and the confidence score."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var r=t(6540);const o={},i=r.createContext(o);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);