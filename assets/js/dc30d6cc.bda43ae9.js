"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4317],{371:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"hookless-api/ClassificationModule","title":"ClassificationModule","description":"Hookless implementation of the useClassification hook.","source":"@site/versioned_docs/version-0.3.x/hookless-api/ClassificationModule.md","sourceDirName":"hookless-api","slug":"/hookless-api/ClassificationModule","permalink":"/react-native-executorch/docs/0.3.x/hookless-api/ClassificationModule","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-executorch/edit/main/docs/versioned_docs/version-0.3.x/hookless-api/ClassificationModule.md","tags":[],"version":"0.3.x","sidebarPosition":1,"frontMatter":{"title":"ClassificationModule","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Hookless API","permalink":"/react-native-executorch/docs/0.3.x/category/hookless-api"},"next":{"title":"ExecuTorchModule","permalink":"/react-native-executorch/docs/0.3.x/hookless-api/ExecutorchModule"}}');var n=t(4848),s=t(8453);const r={title:"ClassificationModule",sidebar_position:1},c=void 0,d={},a=[{value:"Reference",id:"reference",level:2},{value:"Methods",id:"methods",level:3},{value:"Loading the model",id:"loading-the-model",level:2},{value:"Running the model",id:"running-the-model",level:2}];function l(e){const o={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components},{Details:t}=o;return t||function(e,o){throw new Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(o.p,{children:["Hookless implementation of the ",(0,n.jsx)(o.a,{href:"/react-native-executorch/docs/0.3.x/computer-vision/useClassification",children:"useClassification"})," hook."]}),"\n",(0,n.jsx)(o.h2,{id:"reference",children:"Reference"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-typescript",children:"import {\n  ClassificationModule,\n  EFFICIENTNET_V2_S,\n} from 'react-native-executorch';\n\nconst imageUri = 'path/to/image.png';\n\n// Loading the model\nawait ClassificationModule.load(EFFICIENTNET_V2_S);\n\n// Running the model\nconst classesWithProbabilities = await ClassificationModule.forward(imageUri);\n"})}),"\n",(0,n.jsx)(o.h3,{id:"methods",children:"Methods"}),"\n",(0,n.jsxs)(o.table,{children:[(0,n.jsx)(o.thead,{children:(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.th,{children:"Method"}),(0,n.jsx)(o.th,{children:"Type"}),(0,n.jsx)(o.th,{children:"Description"})]})}),(0,n.jsxs)(o.tbody,{children:[(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"load"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"(modelSource: ResourceSource): Promise<void>"})}),(0,n.jsxs)(o.td,{children:["Loads the model, where ",(0,n.jsx)(o.code,{children:"modelSource"})," is a string that specifies the location of the model binary."]})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"forward"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"(input: string): Promise<{ [category: string]: number }>"})}),(0,n.jsxs)(o.td,{children:["Executes the model's forward pass, where ",(0,n.jsx)(o.code,{children:"input"})," can be a fetchable resource or a Base64-encoded string."]})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"onDownloadProgress"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"(callback: (downloadProgress: number) => void): any"})}),(0,n.jsx)(o.td,{children:"Subscribe to the download progress event."})]})]})]}),"\n",(0,n.jsxs)(t,{children:[(0,n.jsx)("summary",{children:"Type definitions"}),(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-typescript",children:"type ResourceSource = string | number;\n"})})]}),"\n",(0,n.jsx)(o.h2,{id:"loading-the-model",children:"Loading the model"}),"\n",(0,n.jsxs)(o.p,{children:["To load the model, use the ",(0,n.jsx)(o.code,{children:"load"})," method. It accepts the ",(0,n.jsx)(o.code,{children:"modelSource"})," which is a string that specifies the location of the model binary. For more information, take a look at ",(0,n.jsx)(o.a,{href:"/react-native-executorch/docs/0.3.x/fundamentals/loading-models",children:"loading models"})," page. This method returns a promise, which can resolve to an error or void."]}),"\n",(0,n.jsx)(o.h2,{id:"running-the-model",children:"Running the model"}),"\n",(0,n.jsxs)(o.p,{children:["To run the model, you can use the ",(0,n.jsx)(o.code,{children:"forward"})," method. It accepts one argument, which is the image. The image can be a remote URL, a local file URI, or a base64-encoded image. The method returns a promise, which can resolve either to an error or an object containing categories with their probabilities."]})]})}function h(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,o,t)=>{t.d(o,{R:()=>r,x:()=>c});var i=t(6540);const n={},s=i.createContext(n);function r(e){const o=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(s.Provider,{value:o},e.children)}}}]);