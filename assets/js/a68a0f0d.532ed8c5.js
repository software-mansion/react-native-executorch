"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7785],{3228:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"typescript-api/StyleTransferModule","title":"StyleTransferModule","description":"TypeScript API implementation of the useStyleTransfer hook.","source":"@site/versioned_docs/version-0.4.x/typescript-api/StyleTransferModule.md","sourceDirName":"typescript-api","slug":"/typescript-api/StyleTransferModule","permalink":"/react-native-executorch/docs/typescript-api/StyleTransferModule","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-executorch/edit/main/docs/versioned_docs/version-0.4.x/typescript-api/StyleTransferModule.md","tags":[],"version":"0.4.x","frontMatter":{"title":"StyleTransferModule"},"sidebar":"tutorialSidebar","previous":{"title":"ObjectDetectionModule","permalink":"/react-native-executorch/docs/typescript-api/ObjectDetectionModule"},"next":{"title":"ExecuTorch bindings","permalink":"/react-native-executorch/docs/category/executorch-bindings-1"}}');var o=r(4848),i=r(8453);const s={title:"StyleTransferModule"},d=void 0,c={},a=[{value:"Reference",id:"reference",level:2},{value:"Methods",id:"methods",level:3},{value:"Loading the model",id:"loading-the-model",level:2},{value:"Running the model",id:"running-the-model",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components},{Details:r}=t;return r||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["TypeScript API implementation of the ",(0,o.jsx)(t.a,{href:"/react-native-executorch/docs/computer-vision/useStyleTransfer",children:"useStyleTransfer"})," hook."]}),"\n",(0,o.jsx)(t.h2,{id:"reference",children:"Reference"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"import {\n  StyleTransferModule,\n  STYLE_TRANSFER_CANDY,\n} from 'react-native-executorch';\n\nconst imageUri = 'path/to/image.png';\n\n// Loading the model\nawait StyleTransferModule.load(STYLE_TRANSFER_CANDY);\n\n// Running the model\nconst generatedImageUrl = await StyleTransferModule.forward(imageUri);\n"})}),"\n",(0,o.jsx)(t.h3,{id:"methods",children:"Methods"}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Method"}),(0,o.jsx)(t.th,{children:"Type"}),(0,o.jsx)(t.th,{children:"Description"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"load"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"(modelSource: ResourceSource): Promise<void>"})}),(0,o.jsxs)(t.td,{children:["Loads the model, where ",(0,o.jsx)(t.code,{children:"modelSource"})," is a string that specifies the location of the model binary."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"forward"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"(input: string): Promise<string>"})}),(0,o.jsxs)(t.td,{children:["Executes the model's forward pass, where ",(0,o.jsx)(t.code,{children:"input"})," can be a fetchable resource or a Base64-encoded string."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"onDownloadProgress"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"(callback: (downloadProgress: number) => void): any"})}),(0,o.jsx)(t.td,{children:"Subscribe to the download progress event."})]})]})]}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:"Type definitions"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"type ResourceSource = string | number | object;\n"})})]}),"\n",(0,o.jsx)(t.h2,{id:"loading-the-model",children:"Loading the model"}),"\n",(0,o.jsxs)(t.p,{children:["To load the model, use the ",(0,o.jsx)(t.code,{children:"load"})," method. It accepts the ",(0,o.jsx)(t.code,{children:"modelSource"})," which is a string that specifies the location of the model binary. For more information, take a look at ",(0,o.jsx)(t.a,{href:"/react-native-executorch/docs/fundamentals/loading-models",children:"loading models"})," page. This method returns a promise, which can resolve to an error or void."]}),"\n",(0,o.jsx)(t.h2,{id:"running-the-model",children:"Running the model"}),"\n",(0,o.jsxs)(t.p,{children:["To run the model, you can use the ",(0,o.jsx)(t.code,{children:"forward"})," method. It accepts one argument, which is the image. The image can be a remote URL, a local file URI, or a base64-encoded image. The method returns a promise, which can resolve either to an error or a URL to generated image."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>d});var n=r(6540);const o={},i=n.createContext(o);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);